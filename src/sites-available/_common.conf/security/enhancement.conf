## -----------------------------------------------------
## Apache 2.4
## Security rules.
##
## @context virtual host, directory, .htaccess
## @module rewrite_module
## @author Olivier Jullien <https://github.com/ojullien>
## -----------------------------------------------------

<IfModule rewrite_module>
    RewriteEngine on
    RewriteCond %{HTTP_USER_AGENT} (libwww|Morfeus|Toata) [NC,OR]
    RewriteCond %{THE_REQUEST} ^GET\ https?:// [NC,OR]
    RewriteCond %{QUERY_STRING} (<|%3C)([^s]*s)+cript.*(>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} GLOBALS(=|\[|\%[0-9A-Z]{0,2}) [NC,OR]
    RewriteCond %{QUERY_STRING} _REQUEST(=|\[|\%[0-9A-Z]{0,2}) [NC,OR]
    RewriteCond %{QUERY_STRING} ^(.*)https?:// [NC]
    RewriteRule . - [F,L]
</IfModule>

## -----------------------------------------------------
## REWRITE Cheat Sheet
## -----------------------------------------------------

# Flags:
#     OR  - Combine conditions via logical or (default: logical and)
#      C  - Chain. Until rule with no C tag.
#      F  - Forbidden. The user will receive a 403 error.
#      G  - Gone. The page does not exist anymore. The user will receive a 410 error.
#      L  - Last Rule. No more rules will be proccessed if this one was successful.
#      N  - Next: instruct Apache to rerun the rewrite rule until all rewriting directives have been achieved.
#     NC  - Case-insensitive matching (default: case-sensitive)
#     NE  - No Escape. Disable automatic url-encoding
#     NS  - No Subrequest. Skip the directive if internal sub-request.
#      R[=301|302|303] - Redirection.
#     PT  - Pass Through. mod_rewrite passes the rewritten URL back to Apache for further processing.
#      P  - Proxy. Handle request by mod_proxy.
#    QSA  - Add query string to the rule.
#      S=[1,2,3,..,n] - Skip the next n rewrite directives
#      T  - Specify mime type for request
#     CO=<name>:<value>:<domain>[:<lifetime>[:<path>] - Set a cookie based on the given data.
#      E=VAR:VAL - Set environment variable variable to value

# Conditions:
#      <    - less than
#      >    - more than
#      =    - equal
#     -d    - check if path is an existing directory
#     -f    - check if path is an existing file
#     -s    - check if path is an existing file larger than 0 bytes
#     -l    - check if path is an symbolic link
#     -F    - check if path is an existing file and user is authorized to access it
#     -U    - checks if test string is a valid url and user is authorized to access it

# Values:
#    $1 .. $9 - buffered values from current rewrite directive
#    %1 .. %9 - buffered values from last rewrite condition.
